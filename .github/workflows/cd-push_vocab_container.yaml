name: CD Push vocab container

on:
  push:
    branches: [ dev-main ]
    paths:
      - 'os-vocabs/**'
      - '.github/workflows/cd_push_os.yaml'
      - 'os-vocabs/docker/**'
  workflow_dispatch:

env:
  DOCKERHUB_REPO: crisalidesr/crisalid-vocab-search
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  build-and-push-os:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: jel
            ndjson: os-vocabs/build/jel/concepts.ndjson.gz
            tag_suffix: os-jel
            tag_version: 0.1
    #          - name: mesh
    #            ndjson: os-vocabs/build/mesh/concepts.ndjson.gz
    #            tag_suffix: os-mesh
    #            tag_version: 0.1
    #          - name: acm
    #            ndjson: os-vocabs/build/acm/concepts.ndjson.gz
    #            tag_suffix: os-acm
    #            tag_version: 0.1

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker Hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # --- Build & push the OpenSearch bundle image ---
      - name: Build & push image (${{ matrix.name }})
        uses: docker/build-push-action@v5
        with:
          context: .
          file: os-vocabs/docker/Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          build-args: |
            CONCEPTS_SRC=${{ matrix.ndjson }}
            GIT_COMMIT=${{ github.sha }}
            GIT_BRANCH=${{ github.ref_name }}
          tags: |
            ${{ env.DOCKERHUB_REPO }}:${{ matrix.tag_suffix }}-${{ matrix.tag_version }}
            ${{ env.DOCKERHUB_REPO }}:${{ matrix.tag_suffix }}-latest
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REPO }}:${{ matrix.name }}-buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REPO }}:${{ matrix.name }}-buildcache,mode=max
          provenance: false
